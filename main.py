
import os

import time

import os 
import sqlite3








#
#
















def anigilate(date1,date2):
        
        y2 = time.strptime(date2,"%H.%M.%d.%m.%Y")
        
        return time.mktime(y2)-date1   
class Todolist: 
    def __init__(self,filename):
        self.filename = filename
       
        self.respect = 0 
        self.connect = sqlite3.connect(f"{self.filename}.db")

        self.cursr = self.connect.cursor()
        self.cursr.execute("""CREATE TABLE IF NOT EXISTS users 
                    (id INTEGER PRIMARY KEY,
                    name TEXT,
                    pas TEXT
                    
                    )
                    
                    """)

        self.cursr.execute("""CREATE TABLE IF NOT EXISTS tasks 
                    (id INTEGER PRIMARY KEY,
                        userid INTEGER,
                        name TEXT,
                        text TEXT,
                        time TEXT,
                        status BOOL,
                        FOREIGN KEY (userid) REFERENCES users (id)
                    )""")
        # –≠—Ç–∞ —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–¥–∞ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ cursore.execute
        
        self.connect.commit()
    def create(self,name,text,time,userid):
        # –≠—Ç–∞ —Å—Ç—Ä–æ—á–∫–∞ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ insert 
        self.cursr.execute("""SELECT * FROM tasks""")
        result = self.cursr.fetchall()
        print(len(result))
        self.cursr.execute(f"""INSERT INTO tasks (id,userid,name,text,time,Status) VALUES({len(result)+1},'{userid}','{name}','{text}','{time}',false)  """)
        #self.cursr.fetchall
        self.sync()

    def Read(self,id):
        # —ç—Ç–∞ —Å—Ç—Ä–æ—á–∫–∞ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ select 
        self.cursr.execute(f"""SELECT * FROM tasks WHERE userid = {id}
                    """)
        return self.cursr.fetchall()

    def update_task(self,num_of_change,status,usrid):
        # –í–û–¢ –≠–¢–û –Ø –•–ï–ó–ï –ö–ê–ö –ó–ê–ú–ï–ù–ò–¢–¨ 
        try:
            

                    
            num_of_change = int(num_of_change)
            self.cursr.execute(f"""UPDATE tasks SET status={status} WHERE id = {num_of_change} AND userid = {usrid}
                    """)
                    
                    
                    
            # if status.lower() == "true" or status.lower() == "1":
                    
                    
            #     print(anigilate(time.time(),self.NST_arr[num_of_change][2]))
            #     if anigilate(time.time(),self.NST_arr[num_of_change][2]) >0 :

            #         self.respect+=1
            #     else:
            #         self.respect-=1
                    
                
                    
                
            # else:
            #     print("ERORRRRRR REMAAAAKEEEE")
        except:
            print("–ø–æ–∞–∫–∫—É—Ä–∞—Ç–Ω–µ–π")

        self.sync()

    def delete(self,num_of_change,usrid):
        
        try:
            

                    
            num_of_change = int(num_of_change)
            self.cursr.execute(f"""DELETE FROM tasks WHERE id={num_of_change} AND userid = {usrid}
                    """)
                    
                    
                    
                # if status.lower() == "true":
                    
                #     self.NST_arr[num_of_change][3] = True
                #     print(anigilate(time.time(),self.NST_arr[num_of_change][2]))
                #     if anigilate(time.time(),self.NST_arr[num_of_change][2]) >0 :

                #         self.respect+=1
                #     else:
                #         self.respect-=1
                    
                # else:
                #     print("TASK NOT MADE")
                    
                
            # else:
            #     print("ERORRRRRR REMAAAAKEEEE")
        except:
            print("–ø–æ–∞–∫–∫—É—Ä–∞—Ç–Ω–µ–π")

        self.sync()
        
        #self.sync()
    def sync(self):
        self.connect.commit()
    
class User:
    
    def __init__(self,filename):
        self.filename = filename
       
        self.curusr = 0 
        self.connect = sqlite3.connect(f"{self.filename}.db")

        self.cursr = self.connect.cursor()
        
        #self.connect.commit()
        self.cursr.execute(f"""SELECT * FROM users """)
        res = self.cursr.fetchall()
        #print(res[0])
        if len(res) <= 0 :
            print("""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë            –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨!                 ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—É—Å—Ç–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö                ‚ïë
‚ïë –°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç           ‚ïë
‚ïë                                              ‚ïë
‚ïë –≠—Ç–æ –∑–∞–π–º–µ—Ç –º–µ–Ω–µ–µ –º–∏–Ω—É—Ç—ã...                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
            self.create(input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: "),input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: "))
        

    def validate(self,name,pas):
        self.cursr.execute(f"""SELECT * FROM users WHERE name = '{name}' AND pas = '{pas}'""")
        res = self.cursr.fetchall()
        print(res)
        if len(res):
            self.curusr = res[0][0]
            return True 
        else: return False 
    def create(self,name,text):
        # –≠—Ç–∞ —Å—Ç—Ä–æ—á–∫–∞ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ insert 

        self.cursr.execute("""SELECT * FROM users""")
        result = self.cursr.fetchall()
        #print(len(result))
        self.cursr.execute(f"""INSERT INTO users (id,name,pas) VALUES({len(result)+1},'{name}','{text}')  """)
        self.curusr = len(result)+1
        #self.cursr.fetchall
        self.sync()
        print("""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë            –ê–ö–ö–ê–£–ù–¢ –°–û–ó–î–ê–ù!                   ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É       ‚ïë
‚ïë –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –ø–æ–¥ —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏    ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")

    def sync(self):
        self.connect.commit()




dec = Todolist("List")

usr = User("List")



print("""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë            –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨!                 ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞                       ‚ïë
‚ïë –í—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–∫–∫–∞—É–Ω—Ç       ‚ïë
‚ïë –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π                            ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")


regis = True

while regis:
    mode = input("""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë            –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ò –í–•–û–î                ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë [1] üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç                 ‚ïë
‚ïë [2] üîê –í–æ–π—Ç–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π                  ‚ïë
‚ïë                                              ‚ïë
‚ïë –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: """)
    #try:
    mode = int(mode)
    if mode == 1:
        print("""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë            –°–û–ó–î–ê–ù–ò–ï –ê–ö–ö–ê–£–ù–¢–ê                 ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
        name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
        pas = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
        usr.create(name,pas)
    if  mode == 2:
        regis = False
    # except:
    #     print("Delete this programm")


continuing = True

print("""‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë               –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø                    ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
for i in range(3):
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
    pas = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
    if usr.validate(name,pas):
        break 
        
    else:
        continuing = False 













    #for i in open_file(filename):
    #print(words_arr)
#print("|–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ê–ù–ö–ò –î–õ–Ø –ë–ï–î–ù–´–•|\n|–ö–†–ê–¢–ö–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –ö–û–ú–ê–ù–î–ê–ú|\n|(1)–∑–∞–ø–∏—Å—å - –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏–π (1)   |\n|(2)–∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - —Ä–µ–∂–∏–º –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è(2)|\n|(3)–≤—ã–≤–æ–¥ - –≤—ã–≤–æ–¥ —Å–ª–æ–≤–∞—Ä—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –°–ª–æ–≤–æ-–∑–Ω–∞—á–µ–Ω–∏–µ-–∫–æ–Ω—Ç–µ–∫—Å—Ç(3)  |\n|–≤—ã—Ö–æ–¥ - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º—ã     |")

os.system('cls' if os.name == 'nt' else 'clear')

while continuing:
    #os.system('cls' if os.name == 'nt' else 'clear')
    #print("|–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ê–ù–ö–ò –î–õ–Ø –ë–ï–î–ù–´–•|\n|–ö–†–ê–¢–ö–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –ö–û–ú–ê–ù–î–ê–ú|\n|(1)–∑–∞–ø–∏—Å—å - –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏–π (1)   |\n|(2)–∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - —Ä–µ–∂–∏–º –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è(2)|\n|(3)–≤—ã–≤–æ–¥ - –≤—ã–≤–æ–¥ —Å–ª–æ–≤–∞—Ä—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –°–ª–æ–≤–æ-–∑–Ω–∞—á–µ–Ω–∏–µ-–∫–æ–Ω—Ç–µ–∫—Å—Ç(3)  |\n| (4) –æ—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–∞      |\n|(5) –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å —Å–ª–æ–≤–∞ |\n   \n|–≤—ã—Ö–æ–¥ - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º—ã     |")
    print("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print("‚ïë           –°–ü–ò–°–û–ö –î–ï–õ                       ‚ïë")
    print("‚ïë     —Ç–≤–æ—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å  –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ ‚ïë")
    print("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£")
    print("‚ïë [1] ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É                        ")
    print("‚ïë [2] ‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ                      ")
    print("‚ïë [3] üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É                        ")
    print("‚ïë [4] üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏                   ")
    print("‚ïë                                              ")
    print("‚ïë [–≤—ã—Ö–æ–¥] –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É                    ")
    print("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£")
    print("‚ïë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫ —É –º–µ–Ω—è –∑–∞ –Ω–µ–¥–µ–ª—é: [########] 10/10 ")
    print(f"‚ïë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã—Ö —Ç–∞—Å–∫–æ–≤ —É –º–µ–Ω—è –∑–∞ –Ω–µ–¥–µ–ª—é: [{"#"*dec.respect}{"."*(10-dec.respect)}] {dec.respect}/10 ")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")


    user_input = input("–í–µ–¥–∏—Ç–µ —Ä–µ–∂–∏–º: ")
    if user_input =="1":
        n = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –∫–æ—Ç–æ—Ä–µ –≤—ã –≤–≤–µ–¥–µ—Ç–µ: ")
        try:
            n = int(n)
            for _ in range(n):
                word = input("–°–ª–æ–≤–æ:")
                meaning = input("–ó–Ω–∞—á–µ–Ω–∏–µ:")
                times = input("–í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ %H.%M.%d.%m.%Y")
                dec.create(word,meaning,times,usr.curusr)
        except:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –ø–æ –Ω–æ–≤–æ–π")
    
    
    
    elif user_input.lower() =="–≤—ã—Ö–æ–¥":
        continuing = False 
    elif user_input == "2":
        print("Id userid NAME TEXT TIME STATUS")
        for el in dec.Read(usr.curusr):
            print("-".join([str(i) for i in el ]))
        #if dec.NST_arr !=[]:
        user_input = input("–Ω–æ–º–µ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        user_status = input("–°–¢–ê–¢–£–°: ")
        dec.update_task(user_input,user_status,usr.curusr)
        #else:
        #    print("=–û–®–ò–ë–ö–ê –§–ê–ô–õ –ü–£–°–¢–û–ô=")
    elif user_input == "3":
        #print(dec.words_array)
        print(dec.Read(usr.curusr))
        user_input = input("–Ω–æ–º–µ—Ä —É–¥–∞–ª–µ–Ω–∏—è")
        dec.delete(user_input,usr.curusr)
        
    elif user_input =="4":
        print("Id userid NAME TEXT TIME STATUS")
        for el in dec.Read(usr.curusr):
            #for xd in el:
            print("-".join([str(i) for i in el ]))
        #print(dec.Read(usr.curusr))
        inp = input("–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ —Ç–æ –µ—Å–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–ª–∏")
        os.system('cls' if os.name == 'nt' else 'clear')
    
        
    else:
        print("–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–≤–æ–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –≤–≤–æ–¥—É –∫–æ–º–º–∞–Ω–¥")
    #print(dec.respect)
    

